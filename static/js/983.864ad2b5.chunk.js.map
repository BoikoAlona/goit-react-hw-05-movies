{"version":3,"file":"static/js/983.864ad2b5.chunk.js","mappings":"2LAAaA,EACX,mECAF,EAA4B,mCAA5B,EAA2E,mC,SCG9DC,EAAkB,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcC,SAC1BN,EAAOO,KAAI,SAAAC,GACV,OACEL,EAAAA,EAAAA,KAAA,MAAmBC,UAAWC,EAAcC,UAC1CH,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMV,GAAYW,GAAE,WAAAC,OAAaL,EAAMM,IAAKR,SACxDE,EAAMO,OAASP,EAAMQ,QCOhB,WAGlB,IAHiC,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBJ,EAAK,GACLO,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWP,IAC3CA,KACLH,GAAMjB,EAA0B,GAAdwB,EAAMJ,IAE1B,OAAOH,CACT,CDhBmBW,GAMb,KAGN,C,oIEiBA,UA9BiB,WACf,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC1B,EAAM4B,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA4BJ,EAAAA,EAAAA,UAASK,EAAAA,EAAAA,MAAcC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAA5CG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAiBtB,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAA1C,GAAA2C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAES,OAFTF,EAAAC,KAAA,EAEnBZ,EAAUH,EAAAA,EAAAA,SAAkBc,EAAAE,KAAA,GACCC,EAAAA,EAAAA,MAAqB,KAAD,EAA3CJ,EAAcC,EAAAI,KACpBf,EAAUH,EAAAA,EAAAA,SACVF,GAAU,SAAAqB,GAAS,SAAAtC,QAAAuC,EAAAA,EAAAA,GAAQD,IAASC,EAAAA,EAAAA,GAAKP,GAAc,IAAGC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE1DP,EAASO,EAAAO,GAAMC,SACfnB,EAAUH,EAAAA,EAAAA,OAAgB,yBAAAc,EAAAS,OAAA,GAAAX,EAAA,kBAE7B,kBAVmB,OAAA7C,EAAAyD,MAAA,KAAAtC,UAAA,KAWpBuB,GACF,GAAG,KAGDgB,EAAAA,EAAAA,MAAA,OAAAnD,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,mBACH4B,IAAWF,EAAAA,EAAAA,UAAoB7B,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,IACtCxB,IAAWF,EAAAA,EAAAA,QAAkByB,EAAAA,EAAAA,MAAA,KAAAnD,SAAA,CAAG,QAAMgC,MACvCnC,EAAAA,EAAAA,KAACL,EAAAA,EAAe,CAACE,OAAQA,MAG/B,C","sources":["../node_modules/nanoid/url-alphabet/index.js","webpack://react-homework-template/./src/components/TrendMoviesList/TrendMoviesList.module.css?a384","components/TrendMoviesList/TrendMoviesList.jsx","../node_modules/nanoid/index.browser.js","pages/HomePage.jsx"],"sourcesContent":["export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"TrendMoviesList_movieList__jBwpv\",\"movieItem\":\"TrendMoviesList_movieItem__xDQkZ\"};","import { Link, useLocation } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport css from './TrendMoviesList.module.css';\n\nexport const TrendMoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => {\n        return (\n          <li key={nanoid()} className={css.movieItem}>\n            <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import { useEffect, useState } from 'react';\n\nimport { TrendMoviesList } from 'components/TrendMoviesList/TrendMoviesList';\nimport { requestTrendMovies } from 'components/services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { STATUSES } from 'components/Utils/Constants';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUSES.idle);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getTrandMovies = async () => {\n      try {\n        setStatus(STATUSES.pending);\n        const dayTrandMovies = await requestTrendMovies();\n        setStatus(STATUSES.success);\n        setMovies(prevState => [...prevState, ...dayTrandMovies]);\n      } catch (error) {\n        setError(error.message);\n        setStatus(STATUSES.error);\n      }\n    };\n    getTrandMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Tranding today</h1>\n      {status === STATUSES.pending && <Loader />}\n      {status === STATUSES.error && <p>ERROR{error}</p>}\n      <TrendMoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default HomePage;"],"names":["urlAlphabet","TrendMoviesList","_ref","movies","location","useLocation","_jsx","className","css","children","map","movie","Link","state","from","to","concat","id","title","name","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array","nanoid","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","STATUSES","_useState4","status","setStatus","_useState5","_useState6","error","setError","useEffect","getTrandMovies","_asyncToGenerator","_regeneratorRuntime","_callee","dayTrandMovies","_context","prev","next","requestTrendMovies","sent","prevState","_toConsumableArray","t0","message","stop","apply","_jsxs","Loader"],"sourceRoot":""}