{"version":3,"file":"static/js/884.b020a4c9.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { NavLink, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\nimport { requestMoviesDetails } from 'components/services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { STATUSES } from 'components/Utils/Constants';\n\nimport image from 'components/Image/vecteezy_icon-image-not-found-vector_.jpg';\nimport css from 'App.module.css';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [status, setStatus] = useState(STATUSES.idle);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMoviesDetails = async () => {\n      try {\n        setStatus(STATUSES.pending);\n        const movieData = await requestMoviesDetails(movieId);\n        setStatus(STATUSES.success);\n        setMovieDetails(movieData);\n      } catch (error) {}\n    };\n    getMoviesDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkRef.current}>Go back</Link>\n      {status === STATUSES.pending && <Loader />}\n      {status === STATUSES.success && (\n        <div>\n          <div className={css.movieDetails}>\n            <img\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n                  : image\n              }\n              alt={movieDetails.title || movieDetails.name}\n              width={300}\n            ></img>\n            <div>\n              <h2>{movieDetails.title || movieDetails.name}</h2>\n              <p>User score: {Math.round(movieDetails.vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{movieDetails.overview}</p>\n              <h3>Genres</h3>\n              <p>\n                {movieDetails.genres.map(genre => {\n                  return `${genre.name}  `;\n                })}\n              </p>\n            </div>\n          </div>\n          <div>\n            <h4>Additional information</h4>\n            <div>\n              <NavLink\n                className={({ isActive }) =>\n                  `${css.navLink} ${isActive ? css.active : ''}`\n                }\n                to=\"cast\"\n                end\n              >\n                Cast\n              </NavLink>\n              <NavLink\n                className={({ isActive }) =>\n                  `${css.navLink} ${isActive ? css.active : ''}`\n                }\n                to=\"reviews\"\n                end\n              >\n                Reviews\n              </NavLink>\n            </div>\n            <div>\n              <Outlet/>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;"],"names":["_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","STATUSES","_useState4","status","setStatus","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","getMoviesDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_context","prev","next","requestMoviesDetails","sent","t0","stop","apply","arguments","_jsxs","children","_jsx","Link","to","current","Loader","className","css","src","poster_path","concat","image","alt","title","name","width","Math","round","vote_average","overview","genres","map","genre","NavLink","_ref2","isActive","end","_ref3","Outlet"],"sourceRoot":""}