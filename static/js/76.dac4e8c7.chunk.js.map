{"version":3,"file":"static/js/76.dac4e8c7.chunk.js","mappings":"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","sources":["../node_modules/nanoid/url-alphabet/index.js","webpack://react-homework-template/./src/components/TrendMoviesList/TrendMoviesList.module.css?a384","components/TrendMoviesList/TrendMoviesList.jsx","../node_modules/nanoid/index.browser.js","components/Utils/Constants.js","components/pages/HomePage.jsx","components/services/api.js"],"sourcesContent":["export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"TrendMoviesList_movieList__jBwpv\",\"movieItem\":\"TrendMoviesList_movieItem__xDQkZ\"};","import { Link, useLocation } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport css from './TrendMoviesList.module.css';\n\nexport const TrendMoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => {\n        return (\n          <li key={nanoid()} className={css.movieItem}>\n            <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const STATUSES = {\n  idle: 'idle',\n  pending: 'pending',\n  success: 'success',\n  error: 'error',\n};","import { useEffect, useState } from 'react';\n\nimport { TrendMoviesList } from 'components/TrendMoviesList/TrendMoviesList';\nimport { requestTrendMovies } from 'components/services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { STATUSES } from 'components/Utils/Constants';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUSES.idle);\n  const [error, setError] = useState(null);\n  const [query] = useState('');\n\n  useEffect(() => {\n    const getTrandMovies = async () => {\n      try {\n        setStatus(STATUSES.pending);\n        const dayTrandMovies = await requestTrendMovies();\n        setStatus(STATUSES.success);\n        setMovies(prevState => [...prevState, ...dayTrandMovies]);\n      } catch (error) {\n        setError(error.message);\n        setStatus(STATUSES.error);\n      }\n    };\n    getTrandMovies();\n  }, [query]);\n\n  return (\n    <div>\n      <h1>Tranding today</h1>\n      {status === STATUSES.pending && <Loader />}\n      {status === STATUSES.error && <p>ERROR{error}</p>}\n      <TrendMoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '32341dbd589795538eacfb126ee51fa5'\n\nexport const requestTrendMovies = async () => {\n  const { data } = await axios.get(`${URL}trending/all/day?language=en-US&api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const requestMoviesByName = async (query) => {\n  const { data } = await axios.get(`${URL}search/movie?query=${query}&language=en-US&api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const requestMoviesDetails = async (id) => {\n  const { data } = await axios.get(`${URL}movie/${id}?language=en-US&api_key=${API_KEY}`);\n  return data;\n};\n\nexport const requestCast = async (id) => {\n  const { data } = await axios.get(`${URL}movie/${id}/credits?language=en-US&api_key=${API_KEY}`);\n  return data;\n};\n\nexport const requestReviews = async (id) => {\n  const { data } = await axios.get(`${URL}movie/${id}/reviews?language=en-US&api_key=${API_KEY}`);\n  return data;\n};"],"names":["urlAlphabet","TrendMoviesList","_ref","movies","location","useLocation","_jsx","className","css","children","map","movie","Link","state","from","to","concat","id","title","name","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array","nanoid","STATUSES","idle","pending","success","error","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","status","setStatus","_useState5","_useState6","setError","_useState7","query","useEffect","getTrandMovies","_asyncToGenerator","_regeneratorRuntime","_callee","dayTrandMovies","_context","prev","next","requestTrendMovies","sent","prevState","_toConsumableArray","t0","message","stop","apply","_jsxs","Loader","URL","API_KEY","_yield$axios$get","data","axios","abrupt","results","requestMoviesByName","_ref2","_callee2","_yield$axios$get2","_context2","_x","requestMoviesDetails","_ref3","_callee3","_yield$axios$get3","_context3","_x2","requestCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","requestReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}