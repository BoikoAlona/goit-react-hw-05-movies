{"version":3,"file":"static/js/718.ff7e76d8.chunk.js","mappings":"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","sources":["../node_modules/nanoid/url-alphabet/index.js","webpack://react-homework-template/./src/components/TrendMoviesList/TrendMoviesList.module.css?a384","components/TrendMoviesList/TrendMoviesList.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"TrendMoviesList_movieList__jBwpv\",\"movieItem\":\"TrendMoviesList_movieItem__xDQkZ\"};","import { Link, useLocation } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport css from './TrendMoviesList.module.css';\n\nexport const TrendMoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => {\n        return (\n          <li key={nanoid()} className={css.movieItem}>\n            <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__0FWoU\",\"searchForm\":\"Searchbar_searchForm__Bt5yh\",\"searchFormButton\":\"Searchbar_searchFormButton__Y7AQk\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__EPPP6\",\"searchFormInput\":\"Searchbar_searchFormInput__k+juR\"};","import css from './Searchbar.module.css';\n\nexport const Searchbar = ({ onSubmit }) => {\n\n  return (\n    <div>\n      <header className={css.searchbar}>\n        <form className={css.searchForm} onSubmit={onSubmit}>\n          <button type=\"submit\" className={css.searchFormButton}>\n            <span className={css.searchFormButtonLabel}>Search</span>\n          </button>\n          <input\n            className={css.searchFormInput}\n            type=\"text\"\n            name=\"searchInput\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n        </form>\n      </header>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { requestMoviesByName } from 'components/services/api';\nimport { STATUSES } from 'components/Utils/Constants';\nimport { Loader } from 'components/Loader/Loader';\nimport { TrendMoviesList } from 'components/TrendMoviesList/TrendMoviesList';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\n\nconst Movies = () => {\n  const [status, setStatus] = useState(STATUSES.idle);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const searchValue = event.currentTarget.elements.searchInput.value;\n    setSearchParams({ query: searchValue });\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n    const fetchMoviesByQuery = async () => {\n      try {\n        setStatus(STATUSES.pending);\n        const searchedMovies = await requestMoviesByName(query);\n        setStatus(STATUSES.success);\n        setMovies(searchedMovies);\n      } catch (error) {\n        setError(error.message);\n        setStatus(STATUSES.error);\n      }\n    };\n    fetchMoviesByQuery();\n  }, [searchParams]);\n\n  return (\n    <div>\n      <Searchbar onSubmit={onSubmit} />\n      {status === STATUSES.pending && <Loader />}\n      {status === STATUSES.error && <p>ERROR{error}</p>}\n      {movies !== null && movies.length > 0 && (\n        <TrendMoviesList movies={movies} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["urlAlphabet","TrendMoviesList","_ref","movies","location","useLocation","_jsx","className","css","children","map","movie","Link","state","from","to","concat","id","title","name","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array","nanoid","Searchbar","onSubmit","_jsxs","type","autoComplete","autoFocus","placeholder","_useState","useState","STATUSES","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","error","setError","_useState5","_useState6","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","query","get","fetchMoviesByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","searchedMovies","_context","prev","next","requestMoviesByName","sent","t0","message","stop","apply","event","preventDefault","searchValue","currentTarget","elements","searchInput","value","Loader"],"sourceRoot":""}